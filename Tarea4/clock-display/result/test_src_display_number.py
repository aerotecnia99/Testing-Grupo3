# Test cases automatically generated by Pynguin (https://github.com/se2p/pynguin).
# Please check them before you use them.
import pytest
import src.display_number as module_0
import builtins as module_1


@pytest.mark.xfail(strict=True)
def test_case_0():
    bool_0 = False
    number_display_0 = module_0.NumberDisplay(bool_0, bool_0)
    var_0 = number_display_0.str()
    assert var_0 == "0False"
    module_1.object(*var_0)


@pytest.mark.xfail(strict=True)
def test_case_1():
    int_0 = 1770
    number_display_0 = module_0.NumberDisplay(int_0, int_0)
    var_0 = number_display_0.str()
    assert var_0 == "1770"
    var_0.clone()


def test_case_2():
    none_type_0 = None
    number_display_0 = module_0.NumberDisplay(none_type_0, none_type_0)
    var_0 = number_display_0.clone()


@pytest.mark.xfail(strict=True)
def test_case_3():
    bytes_0 = b"\x97\x0f\xb1\xb6\x88\xabi\x80\xde3\xf6"
    number_display_0 = module_0.NumberDisplay(bytes_0, bytes_0)
    number_display_0.increase()


@pytest.mark.xfail(strict=True)
def test_case_4():
    bool_0 = True
    bool_1 = False
    number_display_0 = module_0.NumberDisplay(bool_1, bool_0)
    var_0 = number_display_0.increase()
    assert var_0 is True
    var_1 = number_display_0.reset()
    var_1.increase()


@pytest.mark.xfail(strict=True)
def test_case_5():
    str_0 = "O^r72>Bu"
    none_type_0 = None
    number_display_0 = module_0.NumberDisplay(str_0, none_type_0)
    number_display_0.invariant()
